/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.2                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
        (0 0 -0.04361938737)		//0
	(0.05 0 -0.04361938737)		//1
	(1 0 -0.04361938737)		//2
	(0 0.05 -0.04361938737)         //3
        (0.05 0.05 -0.04361938737)       //4
        (1 0.05 -0.04361938737)          //5
	(0 0.2 -0.04361938737)		//6
	(0.05 0.2 -0.04361938737)	//7
	(1 0.2 -0.04361938737)		//8
	(0.05 0.4 -0.04361938737)	//9
	(1 0.4 -0.04361938737)		//10
	(0 0 0.04361938737)		//11
	(0.05 0 0.04361938737)		//12
	(1 0 0.04361938737)		//13
        (0 0.05 0.04361938737)         //14
        (0.05 0.05 0.04361938737)       //15
        (1 0.05 0.04361938737)          //16
	(0 0.2 0.04361938737)		//17
	(0.05 0.2 0.04361938737)	//18
	(1 0.2 0.04361938737)		//19
	(0.05 0.4 0.04361938737)	//20
	(1 0.4 0.04361938737)		//21
);


blocks
(
    hex (0 1 4 3 11 12 15 14) (92 64 1) edgeGrading (0.007 0.007 0.007 0.007 128 128 128 128 1 1 1 1)
    hex (1 2 5 4 12 13 16 15) (128 64 1) edgeGrading (3000 3000 3000 3000 128 128 128 128 1 1 1 1)
    hex (3 4 7 6 14 15 18 17) (92 128 1) edgeGrading (0.007 0.007 0.007 0.007 0.01 0.01 0.01 0.01 1 1 1 1)
    hex (4 5 8 7 15 16 19 18) (128 128 1) edgeGrading (3000 3000 3000 3000 0.01 0.01 0.01 0.01 1 1 1 1)
    hex (7 8 10 9 18 19 21 20) (128 64 1) edgeGrading (3000 3000 3000 3000 256 256 256 256 1 1 1 1)
);

edges
(
);

boundary
(
    INLET
    {
        type patch;
        faces
        (
            (6 17 18 7)
        );
    }
    OUTLET_RIGHT
    {
        type patch;
        faces
        (
            (2 5 16 13)
	    (5 8 19 16)
	    (8 10 21 19)
        );
    }
    OUTLET_TOP
    {
        type wall;
        faces
        (
            (9 20 21 10)
        );
    }
    WALL_JET
    {
        type wall;
        faces
        (
            (7 9 20 18)
        );
    }
    WALL_BOTTOM
    {
        type wall;
        faces
        (
            (0 11 12 1)
	    (1 12 13 2)
        );
    }
    ROT_AXIS
    {
        type patch;
        faces
        (
            (0 3 14 11)
        );
    }
);

mergePatchPairs
(
);
